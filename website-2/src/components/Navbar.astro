
---
// Remove the old avatar import since we need to create an assets folder first
import TinkerForgeLogo from "./TinkerForgeLogo.astro";
---

<nav class="fixed top-0 w-full z-50 glass border-b border-surface-border backdrop-blur-xl">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-3 group">
          <div class="relative">
            <TinkerForgeLogo size={32} class="w-8 h-8 rounded-lg group-hover:scale-110 transition-transform duration-200" />
            <div class="absolute inset-0 bg-gradient-to-br from-primary-500 to-accent-500 rounded-lg blur opacity-30 group-hover:opacity-50 transition-opacity duration-200"></div>
          </div>
          <div class="text-xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
            TinkerForge AI
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-8">
          <a href="/research" class="nav-link">Research</a>
          <a href="/blog" class="nav-link">Blog</a>
          <a href="/projects" class="nav-link">Projects</a>
          <a href="/about" class="nav-link">About</a>
          <a href="/contact" class="px-4 py-2 bg-primary-600 hover:bg-primary-500 text-white rounded-lg font-medium transition-colors duration-200 glow-border">
            Contact
          </a>
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-lg text-gray-300 hover:text-white hover:bg-surface-light focus:outline-none focus:ring-2 focus:ring-primary-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="mobile-menu hidden md:hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 glass border-t border-surface-border">
      <a href="/research" class="mobile-nav-link">Research</a>
      <a href="/blog" class="mobile-nav-link">Blog</a>
      <a href="/projects" class="mobile-nav-link">Projects</a>
      <a href="/about" class="mobile-nav-link">About</a>
      <a href="/contact" class="mobile-nav-link bg-primary-600 text-white">Contact</a>
    </div>
  </div>
</nav>

<style>
  .nav-link {
    @apply text-gray-300 hover:text-white px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 relative;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 50%;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .nav-link:hover::after {
    width: 100%;
  }
  
  .mobile-nav-link {
    @apply text-gray-300 hover:text-white block px-3 py-2 rounded-lg text-base font-medium transition-colors duration-200;
  }
</style>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    mobileMenuButton?.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!mobileMenuButton?.contains(e.target) && !mobileMenu?.contains(e.target)) {
        mobileMenu?.classList.add('hidden');
        mobileMenuButton?.setAttribute('aria-expanded', 'false');
      }
    });
  });
</script>
