---
import Navbar from './Navbar.astro';
import Footer from './Footer.astro';

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { 
  title = "TinkerForge AI - Pioneering Safe AI Research", 
  description = "Building safe, beneficial AI systems through rigorous research and open collaboration. Advancing the frontiers of AI alignment and safety.",
  image = "/og-image.jpg"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=JetBrains+Mono:wght@400;500;600&display=swap" rel="stylesheet" />
    
    <!-- Custom Styles -->
    <style>
      html {
        scroll-behavior: smooth;
      }
      
      body {
        background: #0f1419;
        background-image: 
          radial-gradient(at 40% 20%, hsla(228, 100%, 63%, 0.08) 0px, transparent 50%),
          radial-gradient(at 80% 0%, hsla(189, 100%, 56%, 0.08) 0px, transparent 50%),
          radial-gradient(at 0% 50%, hsla(355, 100%, 93%, 0.08) 0px, transparent 50%);
      }
      
      .glass {
        backdrop-filter: blur(12px);
        background: rgba(21, 27, 35, 0.6);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      .glow-border {
        position: relative;
      }
      
      .glow-border::before {
        content: '';
        position: absolute;
        inset: 0;
        padding: 1px;
        background: linear-gradient(45deg, rgba(59, 130, 246, 0.5), rgba(217, 70, 239, 0.5));
        border-radius: inherit;
        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
        mask-composite: exclude;
      }
      
      .animated-gradient {
        background: linear-gradient(-45deg, #3b82f6, #8b5cf6, #d946ef, #06b6d4);
        background-size: 400% 400%;
        animation: gradient 8s ease infinite;
      }
      
      .skip-link {
        position: absolute;
        top: -40px;
        left: 6px;
        background: #3b82f6;
        color: white;
        padding: 8px;
        text-decoration: none;
        border-radius: 4px;
        z-index: 100;
      }
      
      .skip-link:focus {
        top: 6px;
      }
    </style>
    
    <slot name="head" />
  </head>
  
  <body class="bg-surface text-white font-sans antialiased">
    <a href="#main-content" class="skip-link">Skip to main content</a>
    
    <!-- Background Pattern -->
    <div class="fixed inset-0 pointer-events-none">
      <div class="absolute inset-0 bg-mesh opacity-50"></div>
      <div class="absolute top-0 left-1/2 -translate-x-1/2 w-full h-full max-w-6xl">
        <div class="absolute top-20 left-10 w-2 h-2 bg-primary-500 rounded-full opacity-30 animate-float"></div>
        <div class="absolute top-40 right-20 w-1 h-1 bg-accent-400 rounded-full opacity-40 animate-float" style="animation-delay: 1s"></div>
        <div class="absolute top-60 left-1/3 w-1.5 h-1.5 bg-primary-400 rounded-full opacity-20 animate-float" style="animation-delay: 2s"></div>
      </div>
    </div>
    
    <Navbar />
    
    <main id="main-content" class="relative z-10">
      <slot />
    </main>
    
    <Footer />
    
    <!-- Scroll to top button -->
    <button 
      id="scroll-to-top" 
      class="fixed bottom-8 right-8 w-12 h-12 bg-primary-600 hover:bg-primary-500 text-white rounded-full shadow-lg opacity-0 pointer-events-none transition-all duration-300 z-50 flex items-center justify-center"
      aria-label="Scroll to top"
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
      </svg>
    </button>
    
    <script>
      // Scroll to top functionality
      const scrollToTopBtn = document.getElementById('scroll-to-top');
      
      window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
          scrollToTopBtn?.classList.remove('opacity-0', 'pointer-events-none');
        } else {
          scrollToTopBtn?.classList.add('opacity-0', 'pointer-events-none');
        }
      });
      
      scrollToTopBtn?.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
      
      // Add scroll-triggered animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-fade-in');
          }
        });
      }, observerOptions);
      
      // Observe all elements with animation classes
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.animate-on-scroll').forEach(el => {
          observer.observe(el);
        });
      });
    </script>
  </body>
</html>
